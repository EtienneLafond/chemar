<!DOCTYPE html>
<html>
<head>
    <title>Molecule Viewer</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

    <script type="importmap">
        {
            "imports": {
                "three": "/js/three.module.js",
                "OrbitControls": "/js/OrbitControls.js",
                "VRMLLoader": "/js/VRMLLoader.js"
            }
        }
    </script>

    <style>
        body { 
            background-color : #202020;
            margin: 0; 
        }
        #three-area{
            height: 100vh;
            width: 100%;
        }
        #gui-area{
            position: absolute;
            top: 0;
            left: 0;
            max-width: 500px;
            z-index: 1000 !important;
        }
        .gui-width{
            max-width: 500px;
        }
        #body-container{
            position: relative;
        }
        .bg-black{
            background-color: #1f2326 !important;
        }
        .transparent-blur{
            background-color: rgba(31, 35, 38, 0.7);
        }
        .blur-10{
            backdrop-filter: blur(10px);
        }
    </style> 
</head>
<body>
    <div id = "body-container">
        <div id ="three-area"></div>
        <div id="gui-area">
            <div class="gui-width">
            </div>
        </div> 
    </div>

    <script type= "module">
        import { OrbitControls } from '/js/OrbitControls.js';
        import { VRMLLoader } from '/js/VRMLLoader.js';
        import * as THREE from '/js/three.module.js';

        const threeBackground = document.getElementById('three-background');
        const threeArea = document.getElementById('three-area');

        let scene, camera, renderer, controls, clock;

        let axesHelper;
        let spotLightTop, spotLightBottom, ambientLight;

        clock = new THREE.Clock();
        let deltaTime = 0;
        let totalTime = 0;

        const loader = new VRMLLoader();

        function init(){

            scene = new THREE.Scene();
            camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 4000 );

            renderer = new THREE.WebGLRenderer({ alpha: true });
            renderer.setClearColor( 0x000000, 0 );
            renderer.setSize( window.innerWidth, window.innerHeight );
            document.body.appendChild( renderer.domElement );
            
            spotLightTop = new THREE.SpotLight( 0xffffff );
            spotLightTop.position.set( 0, 0, 1000 );
            scene.add( spotLightTop );

            ambientLight = new THREE.AmbientLight( 0xffffff );
            scene.add( ambientLight );


            loader.load( '../scenefiles/PeriodicTable.wrl', function ( object ) {
                scene.add( object );
            } );

            camera.position.x = 30;
            camera.position.y = 30;
            camera.position.z = 30;

            // axesHelper = new THREE.AxesHelper( 50 );
            // scene.add( axesHelper );

            controls = new OrbitControls( camera, renderer.domElement );
            controls.dampingFactor = 10;
            controls.minDistance = 35;

        }

        
        function animate() {
            requestAnimationFrame( animate );

            renderer.render( scene, camera );
            controls.update();
        }


        init();
        animate();
    </script>
   
</body>
</html>